samplelist <- read.csv("listFile.csv")
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:9){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:9){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
dat <- left_join(x=all_data, y=samplelist, by = "sample", all.x = TRUE)
head(dat)
all_data %>%
arrange(factor(subspecies,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
all_data %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
# Read in the arguments
library("optparse")
# Read in the arguments
install.packages(optparse)
option_list = list(
make_option(c("-p", "--prefix"), type="character", default=NULL,
help="prefix name (with path if not in the current directory)", metavar="character"),
make_option(c("-i", "--infofile"), type="character", default=NULL,
help="info text file containing for each individual the population/species information", metavar="character"),
make_option(c("-k", "--maxK"), type="integer", default=NULL,
help="maximum K value", metavar="integer"),
make_option(c("-m", "--minK"), type="integer", default=2,
help="minimum K value", metavar="integer"),
make_option(c("-l", "--populations"), type="character", default=NULL,
help="comma-separated list of populations/species in the order to be plotted", metavar="character"),
make_option(c("-o", "--outPrefix"), type="character", default="default",
help="output prefix (default: name provided with prefix)", metavar="character")
)
# read in the different admixture output files
minK=opt$minK
# If no output prefix is given, use the input prefix
if(opt$outPrefix=="default") opt$outPrefix=opt$prefix
opt_parser = OptionParser(option_list=option_list)
opt = parse_args(opt_parser)
#samplelist <- read_delim("filtered_SOSP_352Samples_122322.list", delim=" ",
#                         col_names = c("sample", "population"))
samplelist <- read.csv("listFile.csv")
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
View(a)
View(all_data)
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:2){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
View(all_data)
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:8){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
all_data <- as.data.frame(all_data)
dat <- left_join(x=all_data, y=samplelist, by = "sample", all.x = TRUE)
head(dat)
View(dat)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:4){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
all_data <- as.data.frame(all_data)
dat <- left_join(x=all_data, y=samplelist, by = "sample", all.x = TRUE)
head(dat)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
tiff(file=paste0(opt$outPrefix,".tiff"),width = 2000, height = 1200,res=200)
tiff(file="admixture_plot.tiff"),width = 2000, height = 1200,res=200)
tiff(file="admixture_plot.tiff",width = 2000, height = 1200,res=200)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_plot.tiff",width = 20000, height = 1200,res=200)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_plot.tiff",width = 8000, height = 1200,res=200)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_plot.tiff",width = 8000, height = 5000,res=300)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(2:k)),
delim=" ")
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 2:8){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(2:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
#vec<- c(1,2,3,4,5,6,7,8,9,10,11,)
for (k in 1:8){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
all_data <- as.data.frame(all_data)
dat <- left_join(x=all_data, y=samplelist, by = "sample", all.x = TRUE)
write.csv(dat, "admixture_data.csv")
head(dat)
tiff(file="admixture_plot.tiff",width = 8000, height = 5000,res=300)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#  labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_plot.tiff",width = 10000, height = 5000,res=300)
dat %>%
arrange(factor(population,
#levels = c("maxima", "sanaka", "rufina", "merrilli")
)) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Sample") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#scale_fill_manual(values = c("#C3C1C1","#A4A2A2","#777777", "#3E3E3E"), name="K",
#  labels=seq(1:8)) +
facet_wrap(~k,ncol=1)
dev.off()
### look at the k=20 now
samplelist <- read.csv("listFile.csv")
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
for (k in 20){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
tiff(file="admixture_k20_plot.tiff",width = 10000, height = 5000,res=300)
all_data %>%
arrange(factor(subspecies, levels = c("maxima", "sanaka", "insignis", "kenaiensis", "caurina", "rufina", "merrilli", "morphna", "cleonensis", "montana","samuelis","pusillula","maxillaris","gouldii","heermanni","fallax","graminea","rivularis","adusta","mexicana","nominate","unknown"))) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Population") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#FAD114", "#F57B7A","#E7D8EF","#FEFF7F", "#F8AA03", "#39AFB6","#C19ED6", "#89CD66","#FACB10", "#D6C29D",
"#BFE9E8", "#61C4CA", "#1B4865", "#5FA8D3", "#CAE9FE", "#D69E9D", "#C55A11", "#FCDD9B", "#CCCCCC", "#FBCFBE",
"#D8D79E", "#404040"),
name="K",
labels=seq(1:4))  +
facet_wrap(~k,ncol=1)
dev.off()
### look at the k=20 now
samplelist <- read.csv("listFile.csv")
all_data <- tibble(sample=character(),
k=numeric(),
Q=character(),
value=numeric())
for (k in 20){
data <- read_delim(paste0("filtered_SOSP_352Samples_122322.",k,".Q"),
col_names = paste0("Q",seq(1:k)),
delim=" ")
data$sample <- samplelist$sample
data$k <- k
#This step converts from wide to long.
data %>% gather(Q, value, -sample,-k) -> data
all_data <- rbind(all_data,data)
}
all_data
# add subspp and pop columns
all_data <- as.data.frame(all_data)
dat <- left_join(x=all_data, y=samplelist, by = "sample", all.x = TRUE)
head(dat)
tiff(file="admixture_k20_plot.tiff",width = 10000, height = 5000,res=300)
dat %>%
arrange(factor(subspecies, levels = c("maxima", "sanaka", "insignis", "kenaiensis", "caurina", "rufina", "merrilli", "morphna", "cleonensis", "montana","samuelis","pusillula","maxillaris","gouldii","heermanni","fallax","graminea","rivularis","adusta","mexicana","nominate","unknown"))) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Population") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#FAD114", "#F57B7A","#E7D8EF","#FEFF7F", "#F8AA03", "#39AFB6","#C19ED6", "#89CD66","#FACB10", "#D6C29D",
"#BFE9E8", "#61C4CA", "#1B4865", "#5FA8D3", "#CAE9FE", "#D69E9D", "#C55A11", "#FCDD9B", "#CCCCCC", "#FBCFBE",
"#D8D79E", "#404040"),
name="K",
labels=seq(1:4))  +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_k20_plot.tiff",width = 10000, height = 500,res=300)
dat %>%
arrange(factor(subspecies, levels = c("maxima", "sanaka", "insignis", "kenaiensis", "caurina", "rufina", "merrilli", "morphna", "cleonensis", "montana","samuelis","pusillula","maxillaris","gouldii","heermanni","fallax","graminea","rivularis","adusta","mexicana","nominate","unknown"))) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Population") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#FAD114", "#F57B7A","#E7D8EF","#FEFF7F", "#F8AA03", "#39AFB6","#C19ED6", "#89CD66","#FACB10", "#D6C29D",
"#BFE9E8", "#61C4CA", "#1B4865", "#5FA8D3", "#CAE9FE", "#D69E9D", "#C55A11", "#FCDD9B", "#CCCCCC", "#FBCFBE",
"#D8D79E", "#404040"),
name="K",
labels=seq(1:4))  +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_k20_plot.tiff",width = 10000, height = 2000,res=300)
dat %>%
arrange(factor(subspecies, levels = c("maxima", "sanaka", "insignis", "kenaiensis", "caurina", "rufina", "merrilli", "morphna", "cleonensis", "montana","samuelis","pusillula","maxillaris","gouldii","heermanni","fallax","graminea","rivularis","adusta","mexicana","nominate","unknown"))) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Population") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#FAD114", "#F57B7A","#E7D8EF","#FEFF7F", "#F8AA03", "#39AFB6","#C19ED6", "#89CD66","#FACB10", "#D6C29D",
"#BFE9E8", "#61C4CA", "#1B4865", "#5FA8D3", "#CAE9FE", "#D69E9D", "#C55A11", "#FCDD9B", "#CCCCCC", "#FBCFBE",
"#D8D79E", "#404040"),
name="K",
labels=seq(1:4))  +
facet_wrap(~k,ncol=1)
dev.off()
tiff(file="admixture_k20_plot.tiff",width = 10000, height = 2000,res=300)
dat %>%
arrange(factor(subspecies, levels = c("maxima", "sanaka", "insignis", "kenaiensis", "caurina", "rufina", "merrilli", "morphna", "cleonensis", "montana","samuelis","pusillula","maxillaris","gouldii","heermanni","fallax","graminea","rivularis","adusta","mexicana","nominate","unknown"))) %>%
mutate(sample = factor(sample, levels = unique(sample))) %>%
ggplot(.,aes(x=sample,y=value,fill=factor(Q))) +
geom_bar(stat="identity",position="stack") +
xlab("Population") + ylab("Ancestry") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
scale_fill_manual(values = c("#FAD114", "#F57B7A","#E7D8EF","#FEFF7F", "#F8AA03", "#39AFB6","#C19ED6", "#89CD66","#FACB10", "#D6C29D",
"#BFE9E8", "#61C4CA", "#1B4865", "#5FA8D3", "#CAE9FE", "#D69E9D", "#C55A11", "#FCDD9B", "#CCCCCC", "#FBCFBE",
"#D8D79E", "#404040"),
name="K",
labels=seq(1:20))  +
facet_wrap(~k,ncol=1)
dev.off()
View(dat)
setwd("/Users/katherine/Desktop/PhD/github/song-sparrow-WGS/GEA")
library(tidyverse)
dat <- read.csv("/input/env.csv")
dat <- read.csv("input/env.csv")
View(dat)
# summarize by population
by.pop <-
dat %>% group_by(POP)
View(by.pop)
str(dat)
dat$POP<- as.factor(dat$POP)
str(dat)
# calculate the average of each column based on groups
by.pop <- dat %>%
group_by(POP) %>%
summarize(across(everything(), mean))
warnings()
View(by.pop)
write.csv(by.pop, "input/popenv.csv")
by.pop <- read.csv("input/popenv.csv")
View(by.pop)
# Subset the data to include only the environmental variables
env_vars <- by.pop[,2:ncol(by.pop)]
View(env_vars)
# read in data for pca
by.pop <- read.csv("input/popenv.csv")
View(by.pop)
# Subset the data to include only the environmental variables
env_vars <- by.pop[,2:ncol(by.pop)]
# Scale the environmental variables
env_vars_scaled <- scale(env_vars)
# Perform PCA
pca_result <- prcomp(env_vars_scaled)
# Print the summary of the PCA
summary(pca_result)
# Plot the scree plot
plot(pca_result, type="l")
# Plot the biplot
biplot(pca_result)
View(pca_result)
# Project the data onto the principal components
pca_data <- predict(pca_result, newdata=env_vars_scaled)
# Add the PCA results back into the original data frame
env_data[,paste0("PC",1:ncol(pca_data))] <- pca_data
# Add the PCA results back into the original data frame
by.pop[,paste0("PC",1:ncol(pca_data))] <- pca_data
# View the updated data frame
head(by.pop)
View(by.pop)
# Plot the scree plot
plot(pca_result, type="l")
write.csv(by.pop, "input/popenvPCA.csv")
by.pop <- read.csv("input/popenvPCA.csv")
head(by.pop)
write.table(by.pop, file='input/popenvPCA.tsv', quote=FALSE, sep='\t')
write.table(by.pop, file='input/popenvPCA.tsv', quote=FALSE, sep='\t', row.names = FALSE)
f <- read.csv("input/popfile.csv")
View(f)
f <- read.csv("input/popfile.csv", header=F)
View(f)
write.table(f, "input/popfile.tsv", quote=F, sep='\t', row.names=F)
write.table(f, file="input/popfile.tsv", quote=F, sep='\t', row.names=F)
f <- read.csv("input/popfile.csv", header=F)
write.table(f, file="input/popfile.tsv", quote=FALSE, sep='\t', row.names=FALSE)
library(tidyverse)
f <- read.csv("input/popfile.csv", header=F)
write.table(f, file="input/popfile.tsv", quote=FALSE, sep='\t', row.names=FALSE)
write.table(f, file="input/popfile.tsv", quote=FALSE, sep='\t', row.names=FALSE, col.names = FALSE)
